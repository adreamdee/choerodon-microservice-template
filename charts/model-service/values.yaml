# Default values for manager-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# pod运行数量
replicaCount: 1

image:
  # 镜像库地址
  repository: registry.cn-hangzhou.aliyuncs.com/{{group.name}}/{{service.code}}
  # 镜像拉取策略
  pullPolicy: IfNotPresent

preJob:
  # job超时时间
  timeout: 300
  # job镜像库地址
  image: registry.cn-hangzhou.aliyuncs.com/choerodon-tools/dbtool:0.6.4
  preConfig:
    # 是否初始化manager_service数据库
    enabled: true
    # 初始化到配置中心文件名
    configFile: application.yml
    # 初始化到配置中心存储方式
    configType: k8s
    # 注册中心地址
    registerHost: http://register-server:8000
    datasource:
      # manager_service数据库连接地址
      url: jdbc:mysql://localhost:3306/manager_service?useUnicode=true&characterEncoding=utf-8&useSSL=false&useInformationSchema=true&remarks=true
      # manager_service数据库用户名
      username: choerodon
      # manager_service数据库密码
      password: 123456
  preInitDB:
    # 是否初始化demo_service数据库
    enabled: true
    datasource:
      # demo_service数据库连接地址
      url: jdbc:mysql://localhost:3306/demo_service?useUnicode=true&characterEncoding=utf-8&useSSL=false&useInformationSchema=true&remarks=true
      # demo_service数据库用户名
      username: choerodon
      # demo_service数据库密码
      password: 123456

deployment:
  # 服务管理端口
  managementPort: 18081

env:
  open:
    # 注册服务地址
    EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://register-server.io-choerodon:8000/eureka/
    # 是否启用配置中心
    SPRING_CLOUD_CONFIG_ENABLED: true
    # 配置中心地址
    SPRING_CLOUD_CONFIG_URI: http://config-server.framework:8010/
    # 数据库连接地址
    SPRING_DATASOURCE_URL: jdbc:mysql://localhost::3306/demo_service?useUnicode=true&characterEncoding=utf-8&useSSL=false&useInformationSchema=true&remarks=true
    # 数据库用户名
    SPRING_DATASOURCE_USERNAME: choerodon
    # 数据库密码
    SPRING_DATASOURCE_PASSWORD: 123456

metrics:
  # 收集应用的指标数据路径
  path: /prometheus
  # 性能指标应用分组
  group: spring-boot

logs:
  # 日志收集格式
  parser: spring-boot

persistence:
  # 是否启用持久化存储
  enabled: false
  # 绑定的pvc名称
  # existingClaim:
  # 持久化路径
  # subPath:

service:
  # 是否创建k8s service
  enabled: false
  # service类型
  type: ClusterIP
  # service端口
  port: 18080
  # service名称
  name: {{service.code}}

ingress:
  # 是否创建k8s ingress
  enabled: false

resources:
  # k8s中容器能使用资源的资源最大值
  limits:
    # cpu: 100m
    memory: 2Gi
  # k8s中容器使用的最小资源需求
  requests:
    # cpu: 100m
    memory: 1.5Gi
